name: "Team Contributions Report"

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

env:
  GH_TOKEN: ${{ github.token }}
  TEAM_TO_CHANNEL: "{ \"s24-4pm-1\": \"C071HLX6DMK\", \"s24-4pm-2\": \"C06592UPS91\" }"
  TEAM: ${{ github.repository }}

jobs:
  get-team-name:
    name: Get Team Name
    runs-on: ubuntu-latest
    outputs:
      team: ${{ steps.find_team.outputs.team }}
    steps:
      - name: Use bash to extract team name (final nine chars of repo name)
        id: find_team
        run: |
          REPO=${{ github.repository }}
          TEAM_NAME="${REPO: -9}"
          echo "Last nine characters: ${TEAM_NAME}"
          echo "::set-output name=team::${TEAM_NAME}"

  report:
    needs: get-team-name
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all commits

    - name: Checkout main branch
      run: |
        git checkout main
        git pull origin main

    - name: Count Commits on main by Author
      id: count_commits
      run: |
        git log --use-mailmap --pretty=format:"%an" main | sort | uniq -c | sort -nr > commits_by_author.txt
        cat commits_by_author.txt

    - name: Install GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    - name: Count Merged PRs to main by Author
      id: count_merged_prs
      run: |
        gh pr list --state merged --base main --json mergedBy --jq '.[] | .mergedBy.login' | sort | uniq -c | sort -nr > merged_prs_by_author.txt
        cat merged_prs_by_author.txt

    - name: Prepare Commit Output
      id: prepare_commit_output
      run: |
        COMMIT_OUTPUT=$(cat commits_by_author.txt)
        echo "commits_output<<EOF" >> $GITHUB_ENV
        echo "$COMMIT_OUTPUT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Prepare PR Output
      id: prepare_pr_output
      run: |
        PR_OUTPUT=$(cat merged_prs_by_author.txt)
        echo "prs_output<<EOF" >> $GITHUB_ENV
        echo "$PR_OUTPUT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

  send-report:
    needs: [get-team-name, report]
    runs-on: ubuntu-latest
    steps:
    - name: Send Report to Slack
      uses: archive/github-actions-slack@v2.0.0
      with:
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
        slack-channel: ${{ fromJSON(env.TEAM_TO_CHANNEL)[needs.get-team-name.outputs.team] }}
        slack-text: |
          ðŸ“Š *Daily Team Contributions Report* ðŸ“Š
          *Commits on main by author:*
          ```
          ${{ env.commits_output }}
          ```
          *Merged PRs to main by author:*
          ```
          ${{ env.prs_output }}
          ```
