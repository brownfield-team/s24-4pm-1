name: "Team Contributions Report"

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

env:
  TEAM_TO_CHANNEL: "{ \"s24-4pm-1\": \"C071HLX6DMK\", \"s24-4pm-2\": \"C06592UPS91\" }"

jobs:
  get-team-name:
    name: Get Team Name
    runs-on: ubuntu-latest
    outputs:
      team: ${{ steps.find_team.outputs.team }}
    steps:
      - name: Use bash to extract team name (final nine chars of repo name)
        id: find_team
        run: |
          REPO=${{ github.repository }}
          TEAM_NAME="${REPO: -9}"
          echo "::set-output name=team::${TEAM_NAME}"

  count-commits:
    name: Count Commits by Author
    needs: get-team-name
    runs-on: ubuntu-latest
    outputs:
      commits_output: ${{ steps.prepare_commit_output.outputs.commits_output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all commits

      - name: Checkout main branch
        run: |
          git checkout main
          git pull origin main

      - name: Count Commits on main by Author
        id: count_commits
        run: |
          git log --use-mailmap --pretty=format:"%an" main | sort | uniq -c | sort -nr > commits_by_author.txt
          cat commits_by_author.txt

      - name: Prepare Commit Output
        id: prepare_commit_output
        run: |
          COMMIT_OUTPUT=$(awk '{printf "%s: %s, ", $2, $1}' commits_by_author.txt | sed 's/, $//')
          echo "::set-output name=commits_output::${COMMIT_OUTPUT}"

  count-prs:
    name: Count PRs by Author
    needs: get-team-name
    runs-on: ubuntu-latest
    outputs:
      prs_output: ${{ steps.prepare_pr_output.outputs.prs_output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all commits

      - name: Checkout main branch
        run: |
          git checkout main
          git pull origin main

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Count Merged PRs to main by Author
        id: count_prs
        run: |
          gh pr list --state merged --base main --json mergedBy --jq '.[] | .mergedBy.login' | sort | uniq -c | sort -nr > merged_prs_by_author.txt || { echo 'Failed to count PRs'; exit 1; }
          gh pr list --state closed --base main --json author --jq '.[] | .author.login' | sort | uniq -c | sort -nr > closed_prs_by_author.txt || { echo 'Failed to count PRs'; exit 1; }
          gh pr list --state open --base main --json author --jq '.[] | .author.login' | sort | uniq -c | sort -nr > open_prs_by_author.txt || { echo 'Failed to count PRs'; exit 1; }
          
          # Combine results
          awk '
            FNR==NR {a[$2]=$1; next}
            FNR==NR {b[$2]=$1; next}
            FNR==NR {c[$2]=$1; next}
            {
              if ($2 in a) merged=a[$2]; else merged=0
              if ($2 in b) closed=b[$2]; else closed=0
              if ($2 in c) open=c[$2]; else open=0
              printf "%s: merged: %d, closed: %d, open: %d | ", $2, merged, closed, open
            }
          ' merged_prs_by_author.txt closed_prs_by_author.txt open_prs_by_author.txt > prs_by_author.txt
          
          sed -i 's/ | $//' prs_by_author.txt
          cat prs_by_author.txt

      - name: Prepare PR Output
        id: prepare_pr_output
        run: |
          PR_OUTPUT=$(cat prs_by_author.txt)
          echo "::set-output name=prs_output::${PR_OUTPUT}"

  send-report:
    needs: [get-team-name, count-commits, count-prs]
    runs-on: ubuntu-latest
    steps:
      - name: Debug Outputs
        run: |
          echo "Commits Output:"
          echo "${{ needs.count-commits.outputs.commits_output }}"
          echo "PR Output:"
          echo "${{ needs.count-prs.outputs.prs_output }}"
          
      - name: Send Report to Slack
        uses: archive/github-actions-slack@v2.0.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ fromJSON(env.TEAM_TO_CHANNEL)[needs.get-team-name.outputs.team] }}
          slack-text: |
            ðŸ“Š *Daily Team Contributions Report* ðŸ“Š
            *Commits on main by author:*
            ```
            ${{ needs.count-commits.outputs.commits_output }}
            ```
            *PR Counts by author:*
            ```
            ${{ needs.count-prs.outputs.prs_output }}
            ```
