name: Fetch Last Updated Project

on: 
  push:
  workflow_dispatch:

jobs:
  find_project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Clear Existing Authentication
        run: gh auth logout || echo "No previous authentication to clear"

      - name: Fetch Last Updated Project
        id: find_project
        env:
          TEAM_NAME: ${{ needs.get-team-name.outputs.team }}  # Ensure this value is set correctly
          ORG_NAME: ${{ secrets.ORG_NAME }}  # Now fetching from organization secrets
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Now fetching from organization secrets
        run: |
          # Login using the token without prompting
          echo -n "${GH_TOKEN}" | gh auth login --with-token --hostname github.com || { echo "Login failed"; exit 1; }

          # Optionally unset GH_TOKEN here if necessary
          unset GH_TOKEN

          # Refresh token with read:project scope specifying the hostname
          gh auth refresh -s read:project -h github.com || { echo "Token refresh failed"; exit 1; }

          # Get the list of projects and print the output for inspection
          PROJECTS_JSON=$(gh project list --owner "$ORG_NAME" --format json) || { echo "Failed to fetch projects"; exit 1; }
          echo "Projects JSON Output: $PROJECTS_JSON"
          
          # Now use jq to find the project ID
          PROJECT_ID=$(echo "$PROJECTS_JSON" | jq -r ".[] | select(.name | endswith(\"${TEAM_NAME}\")) | .number" | head -n 1)

          if [ -z "$PROJECT_ID" ]; then
            echo "No project found for team $TEAM_NAME."
            exit 1
          fi

          echo "Found Project ID: $PROJECT_ID"
          echo "project_id=$PROJECT_ID" >> $GITHUB_ENV  # Set output in the new way
